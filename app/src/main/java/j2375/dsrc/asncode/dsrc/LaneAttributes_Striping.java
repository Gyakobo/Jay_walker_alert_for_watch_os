/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/LaneAttributes_Striping.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * Class definition of the LaneAttributes_Striping type of the dsrc module.
 */
public class LaneAttributes_Striping extends fr.marben.asnsdk.japi.spe.BitStringValue
{
  /**
   * value of the named bit stripeToConnectingLanesRevocableLane.
   */
  public static final int ASN_stripeToConnectingLanesRevocableLane = 0;

  /**
   * value of the named bit stripeDrawOnLeft.
   */
  public static final int ASN_stripeDrawOnLeft = 1;

  /**
   * value of the named bit stripeDrawOnRight.
   */
  public static final int ASN_stripeDrawOnRight = 2;

  /**
   * value of the named bit stripeToConnectingLanesLeft.
   */
  public static final int ASN_stripeToConnectingLanesLeft = 3;

  /**
   * value of the named bit stripeToConnectingLanesRight.
   */
  public static final int ASN_stripeToConnectingLanesRight = 4;

  /**
   * value of the named bit stripeToConnectingLanesAhead.
   */
  public static final int ASN_stripeToConnectingLanesAhead = 5;

  /**
   *  Constructs a newly allocated LaneAttributes_Striping.
   */
  public LaneAttributes_Striping ()
  {
    super();
  };

  /**
   *  Constructs a newly allocated LaneAttributes_Striping.
   *  Sets the number of used bits using the int parameter
   *  and sets the internal value using the bytes array parameter.
   *  @param value the value to be represented by this LaneAttributes_Striping.
   *  @param bitCount the number of used bits to be represented by this LaneAttributes_Striping.
   *  @throws IllegalArgumentException if the bitCount is not consistent with the length of the value.
   */
  public LaneAttributes_Striping (byte[] value, int bitCount)
  {
    super(value, bitCount);
  }

  /**
   *  Constructs a newly allocated LaneAttributes_Striping.
   *  Sets the number of used bits using the int parameter
   *  and sets the internal value using the subarray of bytes.
   *  @param value the array containing the value to be represented by this LaneAttributes_Striping.
   *  @param bitOffset  the index of the first bit to be represented by this LaneAttributes_Striping.
   *  @param bitCount the number of used bits to be represented by this LaneAttributes_Striping.
   *  @throws IllegalArgumentException if the bitCount and bitOffset are not consistent with the length of the value.
   */
  public LaneAttributes_Striping (byte[] value, int bitOffset, int bitCount)
  {
    super(value, bitOffset, bitCount);
  }
}
