/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/HeadingConfidence.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * <BR> Units of 100 m/s
 * <BR> The value 30 shall be used for speeds of 30 m/s or greater (671 mph)
 * <BR> The value 31 shall indicate that the speed is unavailable
 * Class definition of the HeadingConfidence type of the dsrc module.
 */
public class HeadingConfidence extends fr.marben.asnsdk.japi.spe.EnumeratedValue
{
  /**
   * value of the named enumerated unavailable.
   */
  public static final int ASN_unavailable = 0;

  /**
   * value of the named enumerated prec10deg.
   */
  public static final int ASN_prec10deg = 1;

  /**
   * value of the named enumerated prec05deg.
   */
  public static final int ASN_prec05deg = 2;

  /**
   * value of the named enumerated prec01deg.
   */
  public static final int ASN_prec01deg = 3;

  /**
   * value of the named enumerated prec0_1deg.
   */
  public static final int ASN_prec0_1deg = 4;

  /**
   * value of the named enumerated prec0_05deg.
   */
  public static final int ASN_prec0_05deg = 5;

  /**
   * value of the named enumerated prec0_01deg.
   */
  public static final int ASN_prec0_01deg = 6;

  /**
   * value of the named enumerated prec0_0125deg.
   */
  public static final int ASN_prec0_0125deg = 7;

  /**
   *  Constructs a newly allocated HeadingConfidence.
   */
  public HeadingConfidence ()
  {
    super();
  };

  /**
   *  Constructs a newly allocated HeadingConfidence that represents the primitive int argument.
   *  @param value the value to be represented by this HeadingConfidence.
   */
  public HeadingConfidence (int value)
  {
    super(value);
  };
}
