/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/LaneSharing.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * <BR> the value 0 shall be used when the lane ID is
 * <BR> not available or not known
 * <BR> the value 255 is reserved for future use
 * Class definition of the LaneSharing type of the dsrc module.
 */
public class LaneSharing extends fr.marben.asnsdk.japi.spe.BitStringValue
{
  /**
   * value of the named bit overlappingLaneDescriptionProvided.
   */
  public static final int ASN_overlappingLaneDescriptionProvided = 0;

  /**
   * value of the named bit multipleLanesTreatedAsOneLane.
   */
  public static final int ASN_multipleLanesTreatedAsOneLane = 1;

  /**
   * value of the named bit otherNonMotorizedTrafficTypes.
   */
  public static final int ASN_otherNonMotorizedTrafficTypes = 2;

  /**
   * value of the named bit individualMotorizedVehicleTraffic.
   */
  public static final int ASN_individualMotorizedVehicleTraffic = 3;

  /**
   * value of the named bit busVehicleTraffic.
   */
  public static final int ASN_busVehicleTraffic = 4;

  /**
   * value of the named bit taxiVehicleTraffic.
   */
  public static final int ASN_taxiVehicleTraffic = 5;

  /**
   * value of the named bit pedestriansTraffic.
   */
  public static final int ASN_pedestriansTraffic = 6;

  /**
   * value of the named bit cyclistVehicleTraffic.
   */
  public static final int ASN_cyclistVehicleTraffic = 7;

  /**
   * value of the named bit trackedVehicleTraffic.
   */
  public static final int ASN_trackedVehicleTraffic = 8;

  /**
   * value of the named bit pedestrianTraffic.
   */
  public static final int ASN_pedestrianTraffic = 9;

  /**
   *  Constructs a newly allocated LaneSharing.
   */
  public LaneSharing ()
  {
    super();
  };

  /**
   *  Constructs a newly allocated LaneSharing.
   *  Sets the number of used bits using the int parameter
   *  and sets the internal value using the bytes array parameter.
   *  @param value the value to be represented by this LaneSharing.
   *  @param bitCount the number of used bits to be represented by this LaneSharing.
   *  @throws IllegalArgumentException if the bitCount is not consistent with the length of the value.
   */
  public LaneSharing (byte[] value, int bitCount)
  {
    super(value, bitCount);
  }

  /**
   *  Constructs a newly allocated LaneSharing.
   *  Sets the number of used bits using the int parameter
   *  and sets the internal value using the subarray of bytes.
   *  @param value the array containing the value to be represented by this LaneSharing.
   *  @param bitOffset  the index of the first bit to be represented by this LaneSharing.
   *  @param bitCount the number of used bits to be represented by this LaneSharing.
   *  @throws IllegalArgumentException if the bitCount and bitOffset are not consistent with the length of the value.
   */
  public LaneSharing (byte[] value, int bitOffset, int bitCount)
  {
    super(value, bitOffset, bitCount);
  }
}
