/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/GNSSstatus.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * <BR> a link to any other incident 
 * <BR> information data that may be available 
 * <BR> in the normal ATIS incident description 
 * <BR> or other messages
 * Class definition of the GNSSstatus type of the dsrc module.
 */
public class GNSSstatus extends fr.marben.asnsdk.japi.spe.BitStringValue
{
  /**
   * value of the named bit unavailable.
   */
  public static final int ASN_unavailable = 0;

  /**
   * value of the named bit isHealthy.
   */
  public static final int ASN_isHealthy = 1;

  /**
   * value of the named bit isMonitored.
   */
  public static final int ASN_isMonitored = 2;

  /**
   * value of the named bit baseStationType.
   */
  public static final int ASN_baseStationType = 3;

  /**
   * value of the named bit aPDOPofUnder5.
   */
  public static final int ASN_aPDOPofUnder5 = 4;

  /**
   * value of the named bit inViewOfUnder5.
   */
  public static final int ASN_inViewOfUnder5 = 5;

  /**
   * value of the named bit localCorrectionsPresent.
   */
  public static final int ASN_localCorrectionsPresent = 6;

  /**
   * value of the named bit networkCorrectionsPresent.
   */
  public static final int ASN_networkCorrectionsPresent = 7;

  /**
   *  Constructs a newly allocated GNSSstatus.
   */
  public GNSSstatus ()
  {
    super();
  };

  /**
   *  Constructs a newly allocated GNSSstatus.
   *  Sets the number of used bits using the int parameter
   *  and sets the internal value using the bytes array parameter.
   *  @param value the value to be represented by this GNSSstatus.
   *  @param bitCount the number of used bits to be represented by this GNSSstatus.
   *  @throws IllegalArgumentException if the bitCount is not consistent with the length of the value.
   */
  public GNSSstatus (byte[] value, int bitCount)
  {
    super(value, bitCount);
  }

  /**
   *  Constructs a newly allocated GNSSstatus.
   *  Sets the number of used bits using the int parameter
   *  and sets the internal value using the subarray of bytes.
   *  @param value the array containing the value to be represented by this GNSSstatus.
   *  @param bitOffset  the index of the first bit to be represented by this GNSSstatus.
   *  @param bitCount the number of used bits to be represented by this GNSSstatus.
   *  @throws IllegalArgumentException if the bitCount and bitOffset are not consistent with the length of the value.
   */
  public GNSSstatus (byte[] value, int bitOffset, int bitCount)
  {
    super(value, bitOffset, bitCount);
  }
}
