/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/NodeOffsetPointLL.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * <BR> Any optional Attributes which are needed
 * <BR> This includes changes to the current lane width and elevation
 * Class definition of the NodeOffsetPointLL type of the dsrc module.
 */
public class NodeOffsetPointLL extends fr.marben.asnsdk.japi.spe.ChoiceValue
{
  /**
   * value of the typeIndex field for this class.
   */
  public static final int ASNTYPE = 99;

  /**
   * <BR> Nodes with LL content         Span at the equator when using a zoom of one:
   * value of the fieldNumber for the field node_LL1.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.Node_LL_24B j2375.dsrc.asncode.dsrc.Node_LL_24B} for the values of this type.
   */
  public static final short ASN_node_LL1 = 0;

  /**
   * <BR> within +- 22634554  meters of last node
   * value of the fieldNumber for the field node_LL2.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.Node_LL_28B j2375.dsrc.asncode.dsrc.Node_LL_28B} for the values of this type.
   */
  public static final short ASN_node_LL2 = 1;

  /**
   * <BR> within +- 90571389  meters of last node
   * value of the fieldNumber for the field node_LL3.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.Node_LL_32B j2375.dsrc.asncode.dsrc.Node_LL_32B} for the values of this type.
   */
  public static final short ASN_node_LL3 = 2;

  /**
   * <BR> within +- 36231873  meters of last node
   * value of the fieldNumber for the field node_LL4.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.Node_LL_36B j2375.dsrc.asncode.dsrc.Node_LL_36B} for the values of this type.
   */
  public static final short ASN_node_LL4 = 3;

  /**
   * <BR> within +- 01449308 Kmeters of last node
   * value of the fieldNumber for the field node_LL5.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.Node_LL_44B j2375.dsrc.asncode.dsrc.Node_LL_44B} for the values of this type.
   */
  public static final short ASN_node_LL5 = 4;

  /**
   * <BR> within +- 23189096 Kmeters of last node
   * value of the fieldNumber for the field node_LL6.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.Node_LL_48B j2375.dsrc.asncode.dsrc.Node_LL_48B} for the values of this type.
   */
  public static final short ASN_node_LL6 = 5;

  /**
   * <BR> within +- 92756481 Kmeters of last node
   * value of the fieldNumber for the field node_LatLon.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.Node_LLmD_64b j2375.dsrc.asncode.dsrc.Node_LLmD_64b} for the values of this type.
   */
  public static final short ASN_node_LatLon = 6;

  /**
   * <BR> node is a full 32b Lat/Lon range
   * value of the fieldNumber for the field regional.
   * <BR>Use {@link fr.marben.asnsdk.japi.spe.SequenceValue fr.marben.asnsdk.japi.spe.SequenceValue} for the values of this type.
   */
  public static final short ASN_regional = 7;

  /**
   * class definition of the regional field.
   */
  public static class Regional extends fr.marben.asnsdk.japi.spe.SequenceValue
  {
    /**
     * mandatory field regionId.
     */
    public j2375.dsrc.asncode.dsrc.RegionId regionId;

    /**
     * mandatory field regExtValue.
     */
    public fr.marben.asnsdk.japi.spe.OpenTypeValue regExtValue;

    /**
     *  Constructs a newly allocated Regional.
     */
    public Regional ()
    {
      super();
    };

    /**
     *  Gets the value of a component from this Regional.
     *  This method is only for ASNSDK internal use.
     *  @param context a fr.marben.asnsdk.japi.Context.
     *  @param field the named type identifier of the component.
     *  @return the value identified by the named type.
     */
     public fr.marben.asnsdk.japi.vi.IValue asnGetSetSeqValue(
                             fr.marben.asnsdk.japi.Context context,
                             fr.marben.asnsdk.japi.vi.ISetSeqNamedType field)
     {
       switch (field.getFieldNumber(context))
       {
       case 0 :
         return this.regionId;
       case 1 :
         return this.regExtValue;
       default :
         throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to set field number " + field.getFieldNumber(context));
       }
     }

    /**
     *  Creates a newly allocated component value from this Regional.
     *  this value is created for temporary use to solve atNotations
     *  This method is only for ASNSDK internal use.
     *  @param context a fr.marben.asnsdk.japi.Context.
     *  @param field the named type of this Regional.
     *  @return a value from a class implementing the IValue interface.
     */
     public fr.marben.asnsdk.japi.vi.IValue asnSetNewTmpSetSeqValue(
                             fr.marben.asnsdk.japi.Context context,
                             fr.marben.asnsdk.japi.vi.ISetSeqNamedType field)
     {
       switch (field.getFieldNumber(context))
       {
       case 0 :
         return new j2375.dsrc.asncode.dsrc.RegionId();
       case 1 :
         return new fr.marben.asnsdk.japi.spe.OpenTypeValue();
       default :
         throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to create field number " + field.getFieldNumber(context));
       }
     }

    /**
     *  Creates and sets a newly allocated component value from this Regional.
     *  This method is only for ASNSDK internal use.
     *  @param context a fr.marben.asnsdk.japi.Context.
     *  @param field the named type of this Regional.
     *  @return a value from a class implementing the IValue interface.
     */
     public fr.marben.asnsdk.japi.vi.IValue asnSetNewSetSeqValue(
                             fr.marben.asnsdk.japi.Context context,
                             fr.marben.asnsdk.japi.vi.ISetSeqNamedType field)
     {
       switch (field.getFieldNumber(context))
       {
       case 0 :
         this.regionId = new j2375.dsrc.asncode.dsrc.RegionId();
         return this.regionId;
       case 1 :
         this.regExtValue = new fr.marben.asnsdk.japi.spe.OpenTypeValue();
         return this.regExtValue;
       default :
         throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to create field number " + field.getFieldNumber(context));
       }
     }

  }

  /**
   *  Constructs a newly allocated NodeOffsetPointLL.
   */
  public NodeOffsetPointLL ()
  {
    super();
  };

  /**
   *  Create a newly allocated NodeOffsetPointLL.
   *  @param fieldNumber the named type identifier of the component.
   *  @param value the value to set.
   *  @throws fr.marben.asnsdk.japi.InvalidStructureException in case of a problem
   */
   public NodeOffsetPointLL(short fieldNumber,
                        fr.marben.asnsdk.japi.spe.Value value)
                        throws fr.marben.asnsdk.japi.InvalidStructureException
   {
     this.fieldNumber = fieldNumber;
     switch (fieldNumber)
     {
     case 0 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_24B)value;
       break;
     case 1 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_28B)value;
       break;
     case 2 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_32B)value;
       break;
     case 3 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_36B)value;
       break;
     case 4 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_44B)value;
       break;
     case 5 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_48B)value;
       break;
     case 6 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LLmD_64b)value;
       break;
     case 7 :
       this.value = (Regional)value;
       break;
     default :
       throw new fr.marben.asnsdk.japi.InvalidStructureException(fr.marben.asnsdk.japi.InvalidStructureException.INVALID_CHOICE_ALTERNATIVE);
     }
   }

  /**
   *  Sets the value of a component from this NodeOffsetPointLL.
   *  @param fieldNumber the named type identifier of the component.
   *  @param value the value to set.
   *  @throws fr.marben.asnsdk.japi.InvalidStructureException in case of a problem
   */
   public void setValue(short fieldNumber,
                        fr.marben.asnsdk.japi.spe.Value value)
                        throws fr.marben.asnsdk.japi.InvalidStructureException
   {
     this.fieldNumber = fieldNumber;
     switch (fieldNumber)
     {
     case 0 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_24B)value;
       break;
     case 1 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_28B)value;
       break;
     case 2 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_32B)value;
       break;
     case 3 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_36B)value;
       break;
     case 4 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_44B)value;
       break;
     case 5 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LL_48B)value;
       break;
     case 6 :
       this.value = (j2375.dsrc.asncode.dsrc.Node_LLmD_64b)value;
       break;
     case 7 :
       this.value = (Regional)value;
       break;
     default :
       throw new fr.marben.asnsdk.japi.InvalidStructureException(fr.marben.asnsdk.japi.InvalidStructureException.INVALID_CHOICE_ALTERNATIVE);
     }
   }

  /**
   *  Creates and sets a newly allocated component value from this NodeOffsetPointLL.
   *  This method is only for ASNSDK internal use.
   *  @param context a fr.marben.asnsdk.japi.Context.
   *  @param field the named type of this NodeOffsetPointLL.
   *  @return a value from a class implementing the IValue interface.
   */
   public fr.marben.asnsdk.japi.vi.IValue asnSetNewChoiceValue(
                           fr.marben.asnsdk.japi.Context context,
                           fr.marben.asnsdk.japi.vi.IChoiceNamedType field)
   {
     this.fieldNumber = field.getFieldNumber(context);
     switch (this.fieldNumber)
     {
     case 0 :
       this.value = new j2375.dsrc.asncode.dsrc.Node_LL_24B();
       return this.value;
     case 1 :
       this.value = new j2375.dsrc.asncode.dsrc.Node_LL_28B();
       return this.value;
     case 2 :
       this.value = new j2375.dsrc.asncode.dsrc.Node_LL_32B();
       return this.value;
     case 3 :
       this.value = new j2375.dsrc.asncode.dsrc.Node_LL_36B();
       return this.value;
     case 4 :
       this.value = new j2375.dsrc.asncode.dsrc.Node_LL_44B();
       return this.value;
     case 5 :
       this.value = new j2375.dsrc.asncode.dsrc.Node_LL_48B();
       return this.value;
     case 6 :
       this.value = new j2375.dsrc.asncode.dsrc.Node_LLmD_64b();
       return this.value;
     case 7 :
       this.value = new Regional();
       return this.value;
     default :
       throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to create field number " + field.getFieldNumber(context));
     }
   }

  /**
   *  Gets the typeIndex value for this class.
   *  This method is only for ASNSDK internal use. 
   *  @return the type index.
   */
  public int asnGetTypeIndex()
  {
    return 99;
  }

}
