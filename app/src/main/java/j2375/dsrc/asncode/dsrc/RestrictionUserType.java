/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/RestrictionUserType.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * Class definition of the RestrictionUserType type of the dsrc module.
 */
public class RestrictionUserType extends fr.marben.asnsdk.japi.spe.ExtChoiceValue
{
  /**
   * value of the typeIndex field for this class.
   */
  public static final int ASNTYPE = 147;

  /**
   * value of the fieldNumber for the field basicType.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.RestrictionAppliesTo j2375.dsrc.asncode.dsrc.RestrictionAppliesTo} for the values of this type.
   */
  public static final short ASN_basicType = 0;

  /**
   * <BR> a set of the most commonly used types
   * value of the fieldNumber for the field regional.
   * <BR>Use {@link fr.marben.asnsdk.japi.spe.SequenceOfValue fr.marben.asnsdk.japi.spe.SequenceOfValue} for the values of this type.
   */
  public static final short ASN_regional = 1;

  /**
   * class definition of the regional field.
   */
  public static class Regional extends fr.marben.asnsdk.japi.spe.SequenceOfValue
  {
    /**
     * class definition of the SEQUENCE field.
     */
    public static class SEQUENCE extends fr.marben.asnsdk.japi.spe.SequenceValue
    {
      /**
       * mandatory field regionId.
       */
      public j2375.dsrc.asncode.dsrc.RegionId regionId;

      /**
       * mandatory field regExtValue.
       * <BR>Use one of the following classes for values of this type : 
       *   {@link j2375.dsrc.asncode.addgrpc.RestrictionUserType_addGrpC j2375.dsrc.asncode.addgrpc.RestrictionUserType_addGrpC}
       */
      public fr.marben.asnsdk.japi.spe.OpenTypeValue regExtValue;

      /**
       *  Constructs a newly allocated SEQUENCE.
       */
      public SEQUENCE ()
      {
        super();
      };

      /**
       *  Gets the value of a component from this SEQUENCE.
       *  This method is only for ASNSDK internal use.
       *  @param context a fr.marben.asnsdk.japi.Context.
       *  @param field the named type identifier of the component.
       *  @return the value identified by the named type.
       */
       public fr.marben.asnsdk.japi.vi.IValue asnGetSetSeqValue(
                               fr.marben.asnsdk.japi.Context context,
                               fr.marben.asnsdk.japi.vi.ISetSeqNamedType field)
       {
         switch (field.getFieldNumber(context))
         {
         case 0 :
           return this.regionId;
         case 1 :
           return this.regExtValue;
         default :
           throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to set field number " + field.getFieldNumber(context));
         }
       }

      /**
       *  Creates a newly allocated component value from this SEQUENCE.
       *  this value is created for temporary use to solve atNotations
       *  This method is only for ASNSDK internal use.
       *  @param context a fr.marben.asnsdk.japi.Context.
       *  @param field the named type of this SEQUENCE.
       *  @return a value from a class implementing the IValue interface.
       */
       public fr.marben.asnsdk.japi.vi.IValue asnSetNewTmpSetSeqValue(
                               fr.marben.asnsdk.japi.Context context,
                               fr.marben.asnsdk.japi.vi.ISetSeqNamedType field)
       {
         switch (field.getFieldNumber(context))
         {
         case 0 :
           return new j2375.dsrc.asncode.dsrc.RegionId();
         case 1 :
           return new fr.marben.asnsdk.japi.spe.OpenTypeValue();
         default :
           throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to create field number " + field.getFieldNumber(context));
         }
       }

      /**
       *  Creates and sets a newly allocated component value from this SEQUENCE.
       *  This method is only for ASNSDK internal use.
       *  @param context a fr.marben.asnsdk.japi.Context.
       *  @param field the named type of this SEQUENCE.
       *  @return a value from a class implementing the IValue interface.
       */
       public fr.marben.asnsdk.japi.vi.IValue asnSetNewSetSeqValue(
                               fr.marben.asnsdk.japi.Context context,
                               fr.marben.asnsdk.japi.vi.ISetSeqNamedType field)
       {
         switch (field.getFieldNumber(context))
         {
         case 0 :
           this.regionId = new j2375.dsrc.asncode.dsrc.RegionId();
           return this.regionId;
         case 1 :
           this.regExtValue = new fr.marben.asnsdk.japi.spe.OpenTypeValue();
           return this.regExtValue;
         default :
           throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to create field number " + field.getFieldNumber(context));
         }
       }

    }

    /**
     *  Constructs a newly allocated Regional.
     */
    public Regional ()
    {
      super();
    };

    /**
     *  Constructs a newly allocated Regional with the given list.
     *  @param list the list used to initialize this Regional.
     */
    public Regional (java.util.List list)
    {
      super(list);
    };
    
    /**
     *  Creates and appends a newly allocated component value from 
     *  this Regional.
     *  This method is only for ASNSDK internal use. 
     *  @param context a fr.marben.asnsdk.japi.Context.
     *  @param field the named type of this Regional.
     *  @return a value from a class implementing de IValue interface.
     */
    public fr.marben.asnsdk.japi.vi.IValue asnAddNewSetSeqOfValue(
                          fr.marben.asnsdk.japi.Context context,
                          fr.marben.asnsdk.japi.vi.ISetSeqOfNamedType field)
    {
          j2375.dsrc.asncode.dsrc.RestrictionUserType.Regional.SEQUENCE value = new j2375.dsrc.asncode.dsrc.RestrictionUserType.Regional.SEQUENCE();
          this.valueList.add(value);
          return value;
    }
  }

  /**
   *  Constructs a newly allocated RestrictionUserType.
   */
  public RestrictionUserType ()
  {
    super();
  };

  /**
   *  Create a newly allocated RestrictionUserType.
   *  @param fieldNumber the named type identifier of the component.
   *  @param value the value to set.
   *  @throws fr.marben.asnsdk.japi.InvalidStructureException in case of a problem
   */
   public RestrictionUserType(short fieldNumber,
                        fr.marben.asnsdk.japi.spe.Value value)
                        throws fr.marben.asnsdk.japi.InvalidStructureException
   {
     this.unknownExt = null;
     this.fieldNumber = fieldNumber;
     switch (fieldNumber)
     {
     case 0 :
       this.value = (j2375.dsrc.asncode.dsrc.RestrictionAppliesTo)value;
       break;
     case 1 :
       this.value = (Regional)value;
       break;
     default :
       throw new fr.marben.asnsdk.japi.InvalidStructureException(fr.marben.asnsdk.japi.InvalidStructureException.INVALID_CHOICE_ALTERNATIVE);
     }
   }

  /**
   *  Sets the value of a component from this RestrictionUserType.
   *  @param fieldNumber the named type identifier of the component.
   *  @param value the value to set.
   *  @throws fr.marben.asnsdk.japi.InvalidStructureException in case of a problem
   */
   public void setValue(short fieldNumber,
                        fr.marben.asnsdk.japi.spe.Value value)
                        throws fr.marben.asnsdk.japi.InvalidStructureException
   {
     this.unknownExt = null;
     this.fieldNumber = fieldNumber;
     switch (fieldNumber)
     {
     case 0 :
       this.value = (j2375.dsrc.asncode.dsrc.RestrictionAppliesTo)value;
       break;
     case 1 :
       this.value = (Regional)value;
       break;
     default :
       throw new fr.marben.asnsdk.japi.InvalidStructureException(fr.marben.asnsdk.japi.InvalidStructureException.INVALID_CHOICE_ALTERNATIVE);
     }
   }

  /**
   *  Creates and sets a newly allocated component value from this RestrictionUserType.
   *  This method is only for ASNSDK internal use.
   *  @param context a fr.marben.asnsdk.japi.Context.
   *  @param field the named type of this RestrictionUserType.
   *  @return a value from a class implementing the IValue interface.
   */
   public fr.marben.asnsdk.japi.vi.IValue asnSetNewChoiceValue(
                           fr.marben.asnsdk.japi.Context context,
                           fr.marben.asnsdk.japi.vi.IChoiceNamedType field)
   {
     this.fieldNumber = field.getFieldNumber(context);
     switch (this.fieldNumber)
     {
     case 0 :
       this.value = new j2375.dsrc.asncode.dsrc.RestrictionAppliesTo();
       return this.value;
     case 1 :
       this.value = new Regional();
       return this.value;
     default :
       throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to create field number " + field.getFieldNumber(context));
     }
   }

  /**
   *  Gets the typeIndex value for this class.
   *  This method is only for ASNSDK internal use. 
   *  @return the type index.
   */
  public int asnGetTypeIndex()
  {
    return 147;
  }

}
