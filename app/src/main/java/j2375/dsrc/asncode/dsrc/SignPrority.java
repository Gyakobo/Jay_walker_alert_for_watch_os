/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/SignPrority.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * <BR> Encoded as follows: 
 * <BR> upper nibble:  Preempt #:  
 * <BR> Bit 7 (MSB) 1 =  Preempt and 0 =  Priority 
 * <BR> Remaining 3 bits: 
 * <BR> Range of 0.7 The values of 1.6 represent 
 * <BR> the respective controller preempt or Priority 
 * <BR> to be activated The value of 7 represents a 
 * <BR> request for a cabinet flash prempt, 
 * <BR> while the value of 0 is reserved  
 * <BR> lower nibble:  Strategy #:  
 * <BR> Range is 0.15 and is used to specify a desired 
 * <BR> strategy (if available)  
 * <BR> Currently no strategies are defined and this 
 * <BR> should be zero
 * Class definition of the SignPrority type of the dsrc module.
 */
public class SignPrority extends fr.marben.asnsdk.japi.spe.IntIntegerValue
{
  /**
   *  Constructs a newly allocated SignPrority.
   */
  public SignPrority ()
  {
    super();
  };

  /**
   *  Constructs a newly allocated SignPrority that represents the primitive int argument.
   *  @param value the value to be represented by this SignPrority.
   */
  public SignPrority (int value)
  {
    super(value);
  };
}
