/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/TransitStatus.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * <BR> object mass with LSB steps of 500 kg (~1100 lbs)
 * <BR> the value zero shall be uaed for an unknown mass value
 * <BR> the value 255 shall be used any mass larger than 127,500kg
 * <BR> a useful range of 0~1275 metric tons 
 * Class definition of the TransitStatus type of the dsrc module.
 */
public class TransitStatus extends fr.marben.asnsdk.japi.spe.BitStringValue
{
  /**
   * value of the typeIndex field for this class.
   */
  public static final int ASNTYPE = 219;

  /**
   * value of the named bit none.
   */
  public static final int ASN_none = 0;

  /**
   * value of the named bit anADAuse.
   */
  public static final int ASN_anADAuse = 1;

  /**
   * value of the named bit aBikeLoad.
   */
  public static final int ASN_aBikeLoad = 2;

  /**
   * value of the named bit doorOpen.
   */
  public static final int ASN_doorOpen = 3;

  /**
   * value of the named bit occM.
   */
  public static final int ASN_occM = 4;

  /**
   * value of the named bit occL.
   */
  public static final int ASN_occL = 5;

  /**
   *  Constructs a newly allocated TransitStatus.
   */
  public TransitStatus ()
  {
    super();
  };

  /**
   *  Constructs a newly allocated TransitStatus.
   *  Sets the number of used bits using the int parameter
   *  and sets the internal value using the bytes array parameter.
   *  @param value the value to be represented by this TransitStatus.
   *  @param bitCount the number of used bits to be represented by this TransitStatus.
   *  @throws IllegalArgumentException if the bitCount is not consistent with the length of the value.
   */
  public TransitStatus (byte[] value, int bitCount)
  {
    super(value, bitCount);
  }

  /**
   *  Constructs a newly allocated TransitStatus.
   *  Sets the number of used bits using the int parameter
   *  and sets the internal value using the subarray of bytes.
   *  @param value the array containing the value to be represented by this TransitStatus.
   *  @param bitOffset  the index of the first bit to be represented by this TransitStatus.
   *  @param bitCount the number of used bits to be represented by this TransitStatus.
   *  @throws IllegalArgumentException if the bitCount and bitOffset are not consistent with the length of the value.
   */
  public TransitStatus (byte[] value, int bitOffset, int bitCount)
  {
    super(value, bitOffset, bitCount);
  }
  /**
   *  Gets the typeIndex value for this class.
   *  This method is only for ASNSDK internal use. 
   *  @return the type index.
   */
  public int asnGetTypeIndex()
  {
    return 219;
  }

}
