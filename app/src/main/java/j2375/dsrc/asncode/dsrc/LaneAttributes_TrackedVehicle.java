/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/LaneAttributes_TrackedVehicle.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * Class definition of the LaneAttributes_TrackedVehicle type of the dsrc module.
 */
public class LaneAttributes_TrackedVehicle extends fr.marben.asnsdk.japi.spe.BitStringValue
{
  /**
   * value of the named bit spec_RevocableLane.
   */
  public static final int ASN_spec_RevocableLane = 0;

  /**
   * value of the named bit spec_commuterRailRoadTrack.
   */
  public static final int ASN_spec_commuterRailRoadTrack = 1;

  /**
   * value of the named bit spec_lightRailRoadTrack.
   */
  public static final int ASN_spec_lightRailRoadTrack = 2;

  /**
   * value of the named bit spec_heavyRailRoadTrack.
   */
  public static final int ASN_spec_heavyRailRoadTrack = 3;

  /**
   * value of the named bit spec_otherRailType.
   */
  public static final int ASN_spec_otherRailType = 4;

  /**
   *  Constructs a newly allocated LaneAttributes_TrackedVehicle.
   */
  public LaneAttributes_TrackedVehicle ()
  {
    super();
  };

  /**
   *  Constructs a newly allocated LaneAttributes_TrackedVehicle.
   *  Sets the number of used bits using the int parameter
   *  and sets the internal value using the bytes array parameter.
   *  @param value the value to be represented by this LaneAttributes_TrackedVehicle.
   *  @param bitCount the number of used bits to be represented by this LaneAttributes_TrackedVehicle.
   *  @throws IllegalArgumentException if the bitCount is not consistent with the length of the value.
   */
  public LaneAttributes_TrackedVehicle (byte[] value, int bitCount)
  {
    super(value, bitCount);
  }

  /**
   *  Constructs a newly allocated LaneAttributes_TrackedVehicle.
   *  Sets the number of used bits using the int parameter
   *  and sets the internal value using the subarray of bytes.
   *  @param value the array containing the value to be represented by this LaneAttributes_TrackedVehicle.
   *  @param bitOffset  the index of the first bit to be represented by this LaneAttributes_TrackedVehicle.
   *  @param bitCount the number of used bits to be represented by this LaneAttributes_TrackedVehicle.
   *  @throws IllegalArgumentException if the bitCount and bitOffset are not consistent with the length of the value.
   */
  public LaneAttributes_TrackedVehicle (byte[] value, int bitOffset, int bitCount)
  {
    super(value, bitOffset, bitCount);
  }
}
