/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/TirePressureThresholdDetection.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * Class definition of the TirePressureThresholdDetection type of the dsrc module.
 */
public class TirePressureThresholdDetection extends fr.marben.asnsdk.japi.spe.EnumeratedValue
{
  /**
   * value of the named enumerated noData.
   */
  public static final int ASN_noData = 0;

  /**
   * value of the named enumerated overPressure.
   */
  public static final int ASN_overPressure = 1;

  /**
   * value of the named enumerated noWarningPressure.
   */
  public static final int ASN_noWarningPressure = 2;

  /**
   * value of the named enumerated underPressure.
   */
  public static final int ASN_underPressure = 3;

  /**
   * value of the named enumerated extremeUnderPressure.
   */
  public static final int ASN_extremeUnderPressure = 4;

  /**
   * value of the named enumerated undefined.
   */
  public static final int ASN_undefined = 5;

  /**
   * value of the named enumerated errorIndicator.
   */
  public static final int ASN_errorIndicator = 6;

  /**
   * value of the named enumerated notAvailable.
   */
  public static final int ASN_notAvailable = 7;

  /**
   *  Constructs a newly allocated TirePressureThresholdDetection.
   */
  public TirePressureThresholdDetection ()
  {
    super();
  };

  /**
   *  Constructs a newly allocated TirePressureThresholdDetection that represents the primitive int argument.
   *  @param value the value to be represented by this TirePressureThresholdDetection.
   */
  public TirePressureThresholdDetection (int value)
  {
    super(value);
  };
}
