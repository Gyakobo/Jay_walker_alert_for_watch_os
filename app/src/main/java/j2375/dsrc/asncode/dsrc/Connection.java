/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/Connection.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * <BR> The Maneuver between 
 * <BR> the enclosing lane and this lane
 * <BR> at the stop line to connect them
 * Class definition of the Connection type of the dsrc module.
 */
public class Connection extends fr.marben.asnsdk.japi.spe.SequenceValue
{
  /**
   * value of the typeIndex field for this class.
   */
  public static final int ASNTYPE = 55;

  /**
   * <BR> The subject lane connecting to this lane is:
   * mandatory field connectingLane.
   */
  public j2375.dsrc.asncode.dsrc.ConnectingLane connectingLane;

  /**
   * <BR> The index of the connecting lane and also
   * <BR> the maneuver from the current lane to it
   * optional field remoteIntersection.
   */
  public j2375.dsrc.asncode.dsrc.IntersectionReferenceID remoteIntersection;

  /**
   * <BR> This entry is only used when the 
   * <BR> indicated connecting lane belongs 
   * <BR> to another intersection layout This 
   * <BR> provides a means to create meshes of lanes
   * <BR> SPAT mapping details at the stop line are:
   * optional field signalGroup.
   */
  public j2375.dsrc.asncode.dsrc.SignalGroupID signalGroup;

  /**
   * <BR> The matching signal group send by 
   * <BR> the SPAT message for this lane/maneuver
   * <BR> Shall be present unless the connectingLane 
   * <BR> has no signal group (is un-signalized)
   * optional field userClass.
   */
  public j2375.dsrc.asncode.dsrc.RestrictionClassID userClass;

  /**
   * <BR> The Restriction Class of users this applies to
   * <BR> The use of some lane/maneuver and SignalGroupID 
   * <BR> pairings are restricted to selected users
   * <BR> When absent, the SignalGroupID applies to all
   * <BR> Movement assist details are given by:
   * optional field connectionID.
   */
  public j2375.dsrc.asncode.dsrc.LaneConnectionID connectionID;

  /**
   *  Constructs a newly allocated Connection.
   */
  public Connection ()
  {
    super();
  };

  /**
   *  Gets the value of a component from this Connection.
   *  This method is only for ASNSDK internal use.
   *  @param context a fr.marben.asnsdk.japi.Context.
   *  @param field the named type identifier of the component.
   *  @return the value identified by the named type.
   */
   public fr.marben.asnsdk.japi.vi.IValue asnGetSetSeqValue(
                           fr.marben.asnsdk.japi.Context context,
                           fr.marben.asnsdk.japi.vi.ISetSeqNamedType field)
   {
     switch (field.getFieldNumber(context))
     {
     case 0 :
       return this.connectingLane;
     case 1 :
       return this.remoteIntersection;
     case 2 :
       return this.signalGroup;
     case 3 :
       return this.userClass;
     case 4 :
       return this.connectionID;
     default :
       throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to set field number " + field.getFieldNumber(context));
     }
   }

  /**
   *  Creates a newly allocated component value from this Connection.
   *  this value is created for temporary use to solve atNotations
   *  This method is only for ASNSDK internal use.
   *  @param context a fr.marben.asnsdk.japi.Context.
   *  @param field the named type of this Connection.
   *  @return a value from a class implementing the IValue interface.
   */
   public fr.marben.asnsdk.japi.vi.IValue asnSetNewTmpSetSeqValue(
                           fr.marben.asnsdk.japi.Context context,
                           fr.marben.asnsdk.japi.vi.ISetSeqNamedType field)
   {
     switch (field.getFieldNumber(context))
     {
     case 0 :
       return new j2375.dsrc.asncode.dsrc.ConnectingLane();
     case 1 :
       return new j2375.dsrc.asncode.dsrc.IntersectionReferenceID();
     case 2 :
       return new j2375.dsrc.asncode.dsrc.SignalGroupID();
     case 3 :
       return new j2375.dsrc.asncode.dsrc.RestrictionClassID();
     case 4 :
       return new j2375.dsrc.asncode.dsrc.LaneConnectionID();
     default :
       throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to create field number " + field.getFieldNumber(context));
     }
   }

  /**
   *  Creates and sets a newly allocated component value from this Connection.
   *  This method is only for ASNSDK internal use.
   *  @param context a fr.marben.asnsdk.japi.Context.
   *  @param field the named type of this Connection.
   *  @return a value from a class implementing the IValue interface.
   */
   public fr.marben.asnsdk.japi.vi.IValue asnSetNewSetSeqValue(
                           fr.marben.asnsdk.japi.Context context,
                           fr.marben.asnsdk.japi.vi.ISetSeqNamedType field)
   {
     switch (field.getFieldNumber(context))
     {
     case 0 :
       this.connectingLane = new j2375.dsrc.asncode.dsrc.ConnectingLane();
       return this.connectingLane;
     case 1 :
       this.remoteIntersection = new j2375.dsrc.asncode.dsrc.IntersectionReferenceID();
       return this.remoteIntersection;
     case 2 :
       this.signalGroup = new j2375.dsrc.asncode.dsrc.SignalGroupID();
       return this.signalGroup;
     case 3 :
       this.userClass = new j2375.dsrc.asncode.dsrc.RestrictionClassID();
       return this.userClass;
     case 4 :
       this.connectionID = new j2375.dsrc.asncode.dsrc.LaneConnectionID();
       return this.connectionID;
     default :
       throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to create field number " + field.getFieldNumber(context));
     }
   }

  /**
   *  Gets the typeIndex value for this class.
   *  This method is only for ASNSDK internal use. 
   *  @return the type index.
   */
  public int asnGetTypeIndex()
  {
    return 55;
  }

}
