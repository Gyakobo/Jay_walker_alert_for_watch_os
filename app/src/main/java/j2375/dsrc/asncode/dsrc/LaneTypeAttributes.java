/*
Copyright (C) 1999-2011 Marben Products. All rights reserved.

THIS FILE IS PROPRIETARY MATERIAL OF MARBEN PRODUCTS.
AND MAY BE USED ONLY BY DIRECT LICENSEES OF ASNSDK PRODUCT.
THIS FILE MAY NOT BE DISTRIBUTED.

===========================================================================

/home/itsrc/J2375_2016/src/asncode/dsrc/LaneTypeAttributes.java: 

Generated by ASNSDK TCE-JAVA ASN.1 Compiler v4.0 - REF_8.55 - REF_8.39

===========================================================================
*/
package j2375.dsrc.asncode.dsrc;

/**
 * Class definition of the LaneTypeAttributes type of the dsrc module.
 */
public class LaneTypeAttributes extends fr.marben.asnsdk.japi.spe.ExtChoiceValue
{
  /**
   * value of the typeIndex field for this class.
   */
  public static final int ASNTYPE = 80;

  /**
   * value of the fieldNumber for the field vehicle.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.LaneAttributes_Vehicle j2375.dsrc.asncode.dsrc.LaneAttributes_Vehicle} for the values of this type.
   */
  public static final short ASN_vehicle = 0;

  /**
   * <BR> motor vehicle lanes
   * value of the fieldNumber for the field crosswalk.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.LaneAttributes_Crosswalk j2375.dsrc.asncode.dsrc.LaneAttributes_Crosswalk} for the values of this type.
   */
  public static final short ASN_crosswalk = 1;

  /**
   * <BR> pedestrian crosswalks
   * value of the fieldNumber for the field bikeLane.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.LaneAttributes_Bike j2375.dsrc.asncode.dsrc.LaneAttributes_Bike} for the values of this type.
   */
  public static final short ASN_bikeLane = 2;

  /**
   * <BR> bike lanes
   * value of the fieldNumber for the field sidewalk.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.LaneAttributes_Sidewalk j2375.dsrc.asncode.dsrc.LaneAttributes_Sidewalk} for the values of this type.
   */
  public static final short ASN_sidewalk = 3;

  /**
   * <BR> pedestrian sidewalk paths
   * value of the fieldNumber for the field median.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.LaneAttributes_Barrier j2375.dsrc.asncode.dsrc.LaneAttributes_Barrier} for the values of this type.
   */
  public static final short ASN_median = 4;

  /**
   * <BR> medians & channelization
   * value of the fieldNumber for the field striping.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.LaneAttributes_Striping j2375.dsrc.asncode.dsrc.LaneAttributes_Striping} for the values of this type.
   */
  public static final short ASN_striping = 5;

  /**
   * <BR> roadway markings
   * value of the fieldNumber for the field trackedVehicle.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.LaneAttributes_TrackedVehicle j2375.dsrc.asncode.dsrc.LaneAttributes_TrackedVehicle} for the values of this type.
   */
  public static final short ASN_trackedVehicle = 6;

  /**
   * <BR> trains and trolleys
   * value of the fieldNumber for the field parking.
   * <BR>Use {@link j2375.dsrc.asncode.dsrc.LaneAttributes_Parking j2375.dsrc.asncode.dsrc.LaneAttributes_Parking} for the values of this type.
   */
  public static final short ASN_parking = 7;

  /**
   *  Constructs a newly allocated LaneTypeAttributes.
   */
  public LaneTypeAttributes ()
  {
    super();
  };

  /**
   *  Create a newly allocated LaneTypeAttributes.
   *  @param fieldNumber the named type identifier of the component.
   *  @param value the value to set.
   *  @throws fr.marben.asnsdk.japi.InvalidStructureException in case of a problem
   */
   public LaneTypeAttributes(short fieldNumber,
                        fr.marben.asnsdk.japi.spe.Value value)
                        throws fr.marben.asnsdk.japi.InvalidStructureException
   {
     this.unknownExt = null;
     this.fieldNumber = fieldNumber;
     switch (fieldNumber)
     {
     case 0 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Vehicle)value;
       break;
     case 1 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Crosswalk)value;
       break;
     case 2 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Bike)value;
       break;
     case 3 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Sidewalk)value;
       break;
     case 4 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Barrier)value;
       break;
     case 5 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Striping)value;
       break;
     case 6 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_TrackedVehicle)value;
       break;
     case 7 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Parking)value;
       break;
     default :
       throw new fr.marben.asnsdk.japi.InvalidStructureException(fr.marben.asnsdk.japi.InvalidStructureException.INVALID_CHOICE_ALTERNATIVE);
     }
   }

  /**
   *  Sets the value of a component from this LaneTypeAttributes.
   *  @param fieldNumber the named type identifier of the component.
   *  @param value the value to set.
   *  @throws fr.marben.asnsdk.japi.InvalidStructureException in case of a problem
   */
   public void setValue(short fieldNumber,
                        fr.marben.asnsdk.japi.spe.Value value)
                        throws fr.marben.asnsdk.japi.InvalidStructureException
   {
     this.unknownExt = null;
     this.fieldNumber = fieldNumber;
     switch (fieldNumber)
     {
     case 0 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Vehicle)value;
       break;
     case 1 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Crosswalk)value;
       break;
     case 2 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Bike)value;
       break;
     case 3 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Sidewalk)value;
       break;
     case 4 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Barrier)value;
       break;
     case 5 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Striping)value;
       break;
     case 6 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_TrackedVehicle)value;
       break;
     case 7 :
       this.value = (j2375.dsrc.asncode.dsrc.LaneAttributes_Parking)value;
       break;
     default :
       throw new fr.marben.asnsdk.japi.InvalidStructureException(fr.marben.asnsdk.japi.InvalidStructureException.INVALID_CHOICE_ALTERNATIVE);
     }
   }

  /**
   *  Creates and sets a newly allocated component value from this LaneTypeAttributes.
   *  This method is only for ASNSDK internal use.
   *  @param context a fr.marben.asnsdk.japi.Context.
   *  @param field the named type of this LaneTypeAttributes.
   *  @return a value from a class implementing the IValue interface.
   */
   public fr.marben.asnsdk.japi.vi.IValue asnSetNewChoiceValue(
                           fr.marben.asnsdk.japi.Context context,
                           fr.marben.asnsdk.japi.vi.IChoiceNamedType field)
   {
     this.fieldNumber = field.getFieldNumber(context);
     switch (this.fieldNumber)
     {
     case 0 :
       this.value = new j2375.dsrc.asncode.dsrc.LaneAttributes_Vehicle();
       return this.value;
     case 1 :
       this.value = new j2375.dsrc.asncode.dsrc.LaneAttributes_Crosswalk();
       return this.value;
     case 2 :
       this.value = new j2375.dsrc.asncode.dsrc.LaneAttributes_Bike();
       return this.value;
     case 3 :
       this.value = new j2375.dsrc.asncode.dsrc.LaneAttributes_Sidewalk();
       return this.value;
     case 4 :
       this.value = new j2375.dsrc.asncode.dsrc.LaneAttributes_Barrier();
       return this.value;
     case 5 :
       this.value = new j2375.dsrc.asncode.dsrc.LaneAttributes_Striping();
       return this.value;
     case 6 :
       this.value = new j2375.dsrc.asncode.dsrc.LaneAttributes_TrackedVehicle();
       return this.value;
     case 7 :
       this.value = new j2375.dsrc.asncode.dsrc.LaneAttributes_Parking();
       return this.value;
     default :
       throw new fr.marben.asnsdk.japi.DysfunctionException("Unable to create field number " + field.getFieldNumber(context));
     }
   }

  /**
   *  Gets the typeIndex value for this class.
   *  This method is only for ASNSDK internal use. 
   *  @return the type index.
   */
  public int asnGetTypeIndex()
  {
    return 80;
  }

}
